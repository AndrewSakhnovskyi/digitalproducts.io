/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */.about__btn,.contact__form,.hero__desc,.services__desc,.services__rightdesc,.team__profession,.works__button,dfn{font-style:italic}img,legend{border:0}.hero,.services__item,.services__right,.works{text-align:center}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}.header,.row{display:-webkit-box;display:-ms-flexbox}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{padding:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:ProximaNova;src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.eot);src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.eot?#iefix) format("embedded-opentype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.woff2) format("woff2"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.woff) format("woff"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.ttf) format("truetype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_1_0.svg#wf) format("svg");font-weight:300;font-style:normal}@font-face{font-family:ProximaNova;src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.eot);src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.eot?#iefix) format("embedded-opentype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.woff2) format("woff2"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.woff) format("woff"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.ttf) format("truetype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_4_0.svg#wf) format("svg");font-weight:400;font-style:normal}@font-face{font-family:ProximaNova;src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.eot);src:url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.eot?#iefix) format("embedded-opentype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.woff2) format("woff2"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.woff) format("woff"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.ttf) format("truetype"),url(https://d25purrcgqtc5w.cloudfront.net/dist/fonts/proximanova/302D42_5_0.svg#wf) format("svg");font-weight:700;font-style:normal}*{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}body{margin:0;font-family:"PT Sans",sans-serif;font-size:20px;color:#665f60;background-color:#ebebeb}.about__title,.header__link,.hero__title,.services__righttitle{font-family:ProximaNova}.no-scroll{overflow:hidden}.grid{max-width:1170px;margin:0 auto}.about__desc p:not(:last-child),.hero__title{margin-bottom:16px}.row{display:flex}.row--center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.column{width:100%;padding:0 20px}.column-2-3{width:66.66%}.column-1-2{width:50%}.column-1-3{width:33.33%}.column-1-4{width:25%}.column-1-5{width:20%}.column-5-6{width:83.33%}.column-7-12{width:58.33%}@media all and (max-width:1140px){.grid{max-width:768px;padding:0 20px}}.button{padding:11px 51px;border:1px solid #665f60;background-color:inherit}.button:hover{background-color:#665f60;color:#fff;border-color:#fff}.header{padding:40px 30px 15px;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__wrapper{background:url(../img/header-bg.jpg) center/cover no-repeat}.header__logo{width:50%;margin-left:7px}.header__nav{width:50%;padding-top:12px;margin-left:-15px}.header__list{display:-webkit-box;display:-ms-flexbox;display:flex;list-style:none}.header__media{display:none}.header__item:not(:last-child){margin-right:30px}.header__link{font-weight:400;text-decoration:none;color:#fff;font-size:24px;text-transform:uppercase}.hero__title,.services__title{font-weight:700;text-transform:uppercase}.header__link:hover{color:#665f60;border-bottom:2px solid #665f60}.wrapper{position:fixed;z-index:1000;width:100%;background-color:rgba(200,255,255,.2)}.hero{padding:386px 0 506px}.hero__title{font-size:70px;color:#fff}.hero__desc{font-size:30px;color:#fff}@media all and (max-width:1140px){.header{padding:10px;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__item:not(:last-child){margin-right:10px}.header__logo{width:25%}.header__nav{width:75%}}@media all and (max-width:768px){.grid{max-width:100%}.header__list{display:none}.header__media{position:relative;display:block;font-size:50px}.header__list.is-active{display:block;width:100%;height:100%;padding:200px 0;position:fixed;z-index:29;left:0;top:0;text-align:center;background-color:rgba(255,255,255,.95)}.header__btn{position:fixed;z-index:30;display:inline-block;top:26px;right:77px;color:#fff;font-size:45px}.header__link{color:#ebebeb;font-size:30px}.hero{padding:120px 0 50px}.hero__title{font-size:50px}.hero__desc{font-size:24px}}.about{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:125px 0 114px}.about__left{position:relative;margin-left:7px}.about__icon{position:absolute;top:74px;left:168px}.about__title{position:absolute;top:164px;right:111px;font-size:36px;font-weight:300;color:#fff;text-transform:uppercase}.about__desc{padding:69px 23px 85px}.about__btn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:"PT Sans",sans-serif}@media all and (max-width:1140px){.about__left{width:50%}.about__right{width:50%;padding:20px}}@media all and (max-width:768px){.about{display:block}.about img{width:100%}.about__left{width:100%;text-align:center}.about__right{width:100%;padding:20px}.about__icon{top:25%;left:50%}.about__title{top:50%;right:0;left:50%}}.services{display:-webkit-box;display:-ms-flexbox;display:flex;margin-left:10px}.services__left{width:65.66%}.services__item{padding:95px 30px 138px}.services__item a{display:block;color:#665f60;text-decoration:none}.services__item a:hover{-webkit-text-decoration:#665f60;text-decoration:#665f60}.services__itemgrey{background-color:#dbdbdb}.services__icon{margin-bottom:13px}.services__right{padding-top:115px;background:url(../img/services-img.jpg) center/cover no-repeat;width:35.33%}.services__right a{display:block;text-decoration:none}.services__right a:hover{-webkit-text-decoration:#fff;text-decoration:#fff}.services__title{margin-bottom:8px;font-size:24px}.services__desc{font-size:18px}.services__righticon{margin-left:13px;margin-bottom:18px}.services__righttitle{margin-bottom:106px;font-size:36px;font-weight:300;color:#fff;text-transform:uppercase}.services__author,.services__rightdesc{font-size:18px;color:#fff}.services__rightdesc{max-width:350px;margin-left:33px}@media all and (max-width:1140px){.services__rightdesc{max-width:200px}}@media all and (max-width:768px){.services{display:block}.services__left,.services__right{width:100%}.services__title{font-size:20px}.services__rightdesc{max-width:100%;padding-bottom:30px;margin-bottom:30px}.services__righttitle{margin-bottom:40px}}.team__title,.works__title{font-size:36px;font-weight:400;text-transform:uppercase;font-family:ProximaNova}.works__wrapper{padding:50px 0 60px;background:url(../img/works-bg.jpg) center/cover no-repeat}.works__icon{margin-left:14px;margin-bottom:23px}.works__title{margin-left:16px;margin-bottom:59px;color:#fff}.works__arrowleft,.works__arrowright{position:absolute;font-size:72px;color:#fff}.works__slider{text-align:-webkit-center}.works__item{margin-left:10px}.works__btn{margin-top:105px;margin-left:24px}.works__button{border-color:#fff;color:#fff}.works__arrowright{right:-64px;bottom:237px}.works__arrowleft{left:-51px;top:239px;z-index:999}.slick-dots{margin-left:11px;bottom:-66px}.slick-dots li{margin-right:10px}.slick-dots>li.slick-active button{background-color:#fff;border-radius:50%;width:10px;height:10px}.slick-dots li button:before{border:1px solid #fff;border-radius:50%;content:'';width:10px;height:10px;opacity:1}.team{padding-top:54px;text-align:center}.team__icon{margin-left:10px;margin-bottom:19px}.team__title{margin-bottom:51px;margin-left:12px}.team__slider{margin-left:38px;margin-bottom:10px}.team__item{width:350px;height:575px;position:relative}.team__ava{position:absolute;top:0;left:48px;z-index:2}.team__desc{position:absolute;top:134px;left:0;z-index:1;width:350px;padding-top:156px;background-color:#fff}.team__name{margin-bottom:21px;font-family:ProximaNova;font-weight:700;font-size:24px;color:#9f9acf;text-transform:uppercase}.contact__button,.contact__desc{color:#fff;text-transform:uppercase}.team__profession{margin-bottom:46px;font-size:24px}.team__link a{display:block}.team__link a:hover{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.team__contact{width:350px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;padding:19px 31px;background-color:#9f9acf}.team__contact--four{padding:19px 79px}.team__arrowright{position:absolute;font-size:68px;right:-64px;bottom:226px}.team__arrowleft{position:absolute;font-size:68px;left:-90px;top:256px;z-index:999}.contact{position:relative}.contact__desc{position:absolute;top:62px;left:678px;z-index:999;text-align:center;font-family:ProximaNova;font-weight:300;font-size:36px}.contact__form{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:860px;position:absolute;top:438px;right:353px;z-index:999;opacity:.3;font-size:18px}.contact__email,.contact__name{width:415px;padding:15px 20px}.contact__textarea{margin-top:27px;padding-top:17px;padding-left:25px;width:100%;height:200px;resize:none}.contact__btn{position:absolute;bottom:54px;right:636px;z-index:10}.contact__button{padding:22px 79px;border:none;font-weight:700;background-color:#9f9acf}.contact__button:hover{color:#9f9acf;background-color:#fff}.contact__address{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;right:0;top:219px;z-index:999}.contact__address:hover .contact__home{display:block}.contact__icon{padding:25px;background-color:#9f9acf}.contact__home,.contact__number{text-align:center;background-color:#dad8e3;font-size:18px}.contact__home{display:none;padding:10px 31px}.contact__phone{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:311px;right:0;z-index:999}.contact__phone:hover .contact__number{display:block}.contact__number{display:none}.contact__arrow a,.footer{display:-webkit-box;display:-ms-flexbox}.contact__arrow a,.footer__wrapper{background-color:#9f9acf}.contact__arrow{position:absolute;bottom:45px;right:111px;z-index:999}.contact__arrow a{display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:85px;height:85px;opacity:.5}#map{height:900px}@media all and (max-width:1140px){.contact__desc{left:100px}}.footer{display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:75px 23px 75px 46px}.footer__copyrights{color:#fff;font-size:18px}.footer__list{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__link:not(:last-child){margin-right:25px}.footer__link:hover{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}@media all and (max-width:768px){.contact__btn,.contact__form{position:static}.contact__form{width:100%;opacity:1}.contact__address{top:470px}.contact__phone{top:580px}.footer{display:block}.footer__copyrights{margin-bottom:20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
